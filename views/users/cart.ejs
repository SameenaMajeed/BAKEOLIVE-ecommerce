<%- include('../userLayouts/userhead.ejs') %>

  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>

  <style>
    @import url('https://fonts.googleapis.com/css?family=Open+Sans&display=swap');

    body {
      background-color: #eeeeee;
      font-family: 'Open Sans', serif;
      font-size: 14px;
    }

    .container-fluid {
      margin-top: 70px;
    }

    .card-body {
      flex: 1 1 auto;
      padding: 1.40rem;
    }

    .img-sm {
      width: 100%;
      /* Adjusted for responsiveness */
      max-width: 80px;
      /* Maximum width */
      height: auto;
    }

    .itemside .info {
      padding-left: 15px;
      padding-right: 7px;
    }

    .table-shopping-cart .price-wrap {
      line-height: 1.2;
    }

    .table-shopping-cart .price {
      font-weight: bold;
      margin-right: 5px;
      display: block;
    }

    .text-muted {
      color: #969696 !important;
    }

    a {
      text-decoration: none !important;
    }

    .card {
      display: flex;
      flex-direction: column;
      min-width: 0;
      word-wrap: break-word;
      background-color: #fff;
      border: 1px solid rgba(0, 0, 0, .125);
      border-radius: 0;
    }

    .itemside {
      display: flex;
      width: 100%;
    }

    .dlist-align {
      display: flex;
    }

    [class*="dlist-"] {
      margin-bottom: 5px;
    }

    .coupon {
      border-radius: 1px;
    }

    .price {
      font-weight: 600;
      color: #212529;
    }

    .btn.btn-out {
      outline: 1px solid #fff;
      outline-offset: -5px;
    }

    .btn-main {
      border-radius: 2px;
      text-transform: capitalize;
      font-size: 15px;
      padding: 10px 19px;
      cursor: pointer;
      color: #fff;
      width: 100%;
    }

    .btn-light {
      color: #ffffff;
      background-color: #F44336;
      border-color: #f8f9fa;
      font-size: 12px;
    }

    .btn-light:hover {
      color: #ffffff;
      background-color: #F44336;
      border-color: #F44336;
    }

    .btn-apply {
      font-size: 11px;
    }

    /* Media query for smaller screens */
    @media only screen and (max-width: 768px) {
      .itemside {
        flex-direction: column;
      }

      .itemside .info {
        padding-left: 0;
        padding-top: 15px;
        /* Adjusted padding */
      }

      .img-sm {
        margin-bottom: 15px;
        /* Adjusted margin for better spacing */
      }

      .btn-main,
      .btn-light {
        width: auto;
      }

      .text-right.d-none {
        text-align: left !important;
      }

      .text-right.d-none a,
      .text-right.d-none button {
        margin-top: 10px;
        /* Adjusted margin for better spacing */
        width: 100%;
        /* Make buttons take full width on smaller screens */
      }
    }
  </style>


  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css"
    integrity="new-integrity-value" crossorigin="anonymous" referrerpolicy="no-referrer" />

  <div class="mt-5 ms-5">
    <a href="/viewProductDetails" class="btn btn-dark">BACK</a>
  </div>

  <div class="container-fluid">
    <div class="row">
      <aside class="col-lg-9">
        <div class="card">
          <div class="table-responsive">
            <table class="table table-borderless table-shopping-cart">
              <thead class="text-muted">
                <tr class="small text-uppercase">
                  <th scope="col">Product</th>
                  <th scope="col" width="120">Quantity</th>
                  <th scope="col" width="120">Price</th>
                  <th scope="col" class="text-right d-none d-md-table-cell" width="200"></th>
                </tr>
              </thead>
              <tbody>
                <% if (cartData && cartData.products && cartData.products.length> 0) { %>
                  <% for (let i=0; i < cartData.products.length; i++) { %>
                    <tr>
                      <td>
                        <figure class="itemside align-items-center">
                          <div class="aside">
                            <% if (cartData.products[i].product.image && cartData.products[i].product.image.length> 0) {
                              %>
                              <!-- Display the first product image -->
                              <img src="/public/productImage/<%= cartData.products[i].product.image[0] %>"
                                class="img-sm">
                              <% } %>
                          </div>
                          <figcaption class="info">
                            <a href="#" class="title text-dark" data-abc="true">
                              <%= cartData.products[i].product.name %>
                            </a>
                            <p class="text-muted small d-none-sm">
                              <%= cartData.products[i].product.description %>
                            </p>
                          </figcaption>
                        </figure>
                      </td>
                      <td>
                        <div class="input-group">
                          <button class="btn btn-light btn-minus" type="button">-</button>
                          <input type="text" class="form-control quantity-input"
                            value="<%= cartData.products[i].quantity %>" min="1"
                            data-product-id="<%= cartData.products[i].product._id %>">
                          <button class="btn btn-light btn-plus" type="button">+</button>
                        </div>
                      </td>
                      <td>
                        <div class="price-wrap">
                          <var class="price">Rs.<%= cartData.products[i].price %></var>
                        </div>
                      </td>
                      <td class="text-right d-none d-md-table-cell">
                        <div class="d-flex justify-content-end">
                          <a data-original-title="Save to Wishlist" title=""
                            href="/add-to-wishlist/<%= cartData.products[i].product._id %>" class="btn btn-light me-2"
                            data-toggle="tooltip" data-abc="true">
                            <i class="fa fa-heart"></i>
                          </a>
                          <button class="btn btn-light btn-delete"
                            data-product-id="<%= cartData.products[i].product._id %>" data-abc="true">Remove</button>
                        </div>
                      </td>
                    </tr>
                    <% } %>
                      <% } else { %>
                        <tr>
                          <td colspan="4">
                            <div class="col">
                              <p class="text-center">Products Not Found</p>
                            </div>
                          </td>
                        </tr>
                        <% } %>
              </tbody>
            </table>
          </div>
        </div>
      </aside>


      <aside class="col-lg-3">
        <div class="card mb-3">
          <div class="card-body">
            <form id="couponForm" method="post" action="">
              <div class="form-group mb-3">
                <div class="input-group">
                  <button class="btn btn-primary btn-apply coupon" id="showCouponBtn" type="button"
                    onclick="toggleCouponInput()">
                    <i class="fas fa-tags"></i> Have a coupon?
                  </button>

                  <div id="couponInputContainer" style="display: none;" class="mt-4">
                    <div class="input-group">
                      <input type="text" class="form-control" placeholder="Enter coupon code" name="couponCode"
                        id="couponCodeInput">
                      <button class="btn btn-success btn-apply coupon" type="button" id="applyCouponBtn"
                        onclick="applyDiscountCode()">
                        Apply Coupon
                      </button>
                    </div>
                  </div>

                </div>
                <small class="text-muted mt-3">* Coupon can only be applied for purchases above Rs 1000.</small>
              </div>
            </form>
          </div>

        </div>
        <div class="card">
          <div class="card-body">
            <dl>
              <h3>Cart items</h3>
            </dl>
            <hr>
            <% if (cartData && cartData.products && cartData.products.length> 0) { %>
              <% cartData.products.forEach(function (item) { %>
                <dl class="dlist-align justify-content-between">
                  <dt class="text-left">
                    <%= item.product.name %>
                  </dt>
                  <dd class="text-right ml-3">
                    <%= item.product.price %>
                  </dd>
                </dl>
                <% }); %>
                  <hr>
                  <% } else { %>
                    <p>No items in the cart.</p>
                    <% } %>
                      <dl class="dlist-align">
                        <dt class="text-left">Total:</dt>
                        <dd class="text-right text-dark b ml-3">
                          <strong>
                            <% if (cartData && cartData.totalPrice !==undefined) { %>
                              <%= cartData.totalPrice %>
                                <% } else { %>
                                  0
                                  <% } %>
                          </strong>
                        </dd>
                      </dl>
                      <hr>
                      <div id="appliedCouponDetails" style="display: none;">
                        <dl class="dlist-align justify-content-between">
                          <dt class="text-left">Discount Amount:</dt>
                          <dd class="text-right text-dark b ml-3">
                            <strong id="discountAmount"></strong>
                          </dd>
                        </dl>
                        <dl class="dlist-align justify-content-between">
                          <dt class="text-left">Old Total Amount:</dt>
                          <dd class="text-right text-dark b ml-3">
                            <strong id="oldTotalAmount"></strong>
                          </dd>
                        </dl>
                        <dl class="dlist-align justify-content-between">
                          <dt class="text-left">New Total Amount:</dt>
                          <dd class="text-right text-dark b ml-3">
                            <strong id="newTotalAmount"></strong>
                          </dd>
                        </dl>
                        <hr>
                      </div>
                      <a href="/checkout" class="btn btn-out btn-primary btn-square btn-main" data-abc="true"> Proceed
                        to Checkout </a>
                      <a href="/allProduct" class="btn btn-out btn-success btn-square btn-main mt-2"
                        data-abc="true">Continue Shopping</a>
          </div>
        </div>
      </aside>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>

  <script>

    function toggleCouponInput() {
      const couponInputContainer = document.getElementById('couponInputContainer');
      couponInputContainer.style.display = couponInputContainer.style.display === 'none' ? 'block' : 'none';
    }

    async function applyDiscountCode() {
      try {
        // Retrieve the discount code from the input field
        const discountCode = document.getElementById('couponCodeInput').value;

        // Capture the original total amount before applying the coupon
        const oldTotalElement = document.querySelector('.text-right.text-dark.b strong');
        const oldTotalAmount = oldTotalElement ? parseFloat(oldTotalElement.textContent.trim()) : 0;

        // Show loading spinner during coupon verification
        Swal.showLoading();

        // Retrieve the total price from the cart
        const totalElement = document.querySelector('.text-right.text-dark.b strong');
        const total = totalElement ? parseFloat(totalElement.textContent.trim()) : 0;

        // Prepare the request body
        const requestBody = {
          coupon: discountCode,
          total,
          oldTotalAmount, // Include the oldTotalAmount in the request body
        };

        // Send a request to the server to verify the coupon
        const response = await fetch('/verifyCoupon', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(requestBody),
        });

        // Close the loading spinner
        Swal.close();

        // Check if the response is OK
        if (response.ok) {
          // Parse the response JSON
          const result = await response.json();

          // Check if the coupon verification was successful
          if (result.message === 'Coupon verified') {
            // Update coupon details on the page
            document.getElementById('discountAmount').innerText = `-${result.discountAmount}`;
            document.getElementById('newTotalAmount').innerText = result.totalAfterDiscount;

            // Show the applied coupon details
            const appliedCouponDetails = document.getElementById('appliedCouponDetails');
            appliedCouponDetails.style.display = 'block';

            // Update the old total amount on the page
            document.getElementById('oldTotalAmount').innerText = oldTotalAmount.toFixed(2);

            // Show SweetAlert with close button
            Swal.fire({
              icon: 'success',
              title: 'Coupon Applied!',
              text: 'The coupon has been applied successfully.',
              showCloseButton: true,  // Show a close button
              showConfirmButton: false,  // Hide the "OK" button
            });
          } else {
            // Show SweetAlert for unsuccessful coupon application
            Swal.fire({
              icon: 'error',
              title: 'Coupon Error',
              text: result.message,
            });
          }
        } else {
          // Parse the response JSON for error handling
          const result = await response.json();

          // Display the error message in the UI
          const errorTrueElement = document.getElementById('error_true1');
          errorTrueElement.textContent = result.message;

          // Show SweetAlert for coupon verification failure
          Swal.fire({
            icon: 'error',
            title: 'Coupon Verification Failed',
            text: result.message,
          });
        }
      } catch (error) {
        // Handle unexpected errors
        console.error('Error in applyDiscountCode:', error);

        // Show SweetAlert for unexpected errors
        Swal.fire({
          icon: 'error',
          title: 'Error',
          text: 'An unexpected error occurred. Please try again.',
        });
      }
    }


    document.addEventListener('DOMContentLoaded', function () {
      const quantityInputs = document.querySelectorAll('.input-group input');

      if (quantityInputs.length === 0) {
        console.error('No quantity input elements found.');
        return;
      }

      quantityInputs.forEach(function (input) {
        const minusBtn = input.parentElement.querySelector('.btn-minus');
        const plusBtn = input.parentElement.querySelector('.btn-plus');

        if (!minusBtn || !plusBtn) {
          console.error('Minus or plus button not found for quantity input.');
          return;
        }

        minusBtn.addEventListener('click', function () {
          if (input.value > 1) {
            input.value = parseInt(input.value) - 1;
            updateQuantity(input);
          }
        });

        plusBtn.addEventListener('click', function () {
          input.value = parseInt(input.value) + 1;
          updateQuantity(input);
        });
      });

      // Add an event listener for the "Remove" buttons
      const deleteButtons = document.querySelectorAll('.btn-delete');

      deleteButtons.forEach(function (button) {
        button.addEventListener('click', function () {
          const productId = button.dataset.productId;

          // Send AJAX request to delete the item from the cart
          fetch(`/deleteItem/${productId}`, {
            method: 'POST'
          })
            .then(response => response.json())
            .then(data => {
              if (data.success) {
                console.log('Item deleted successfully');
                // Optionally, you can update the UI to reflect the change
                button.closest('tr').remove();
              } else {
                console.error('Failed to delete item');
              }
            })
            .catch(error => {
              console.error('Error:', error);
            });
        });
      });


      function updateQuantity(input) {
        const productId = input.dataset.productId;
        const newQuantity = input.value;

        fetch('/updateQuantity', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            productId,
            newQuantity,
            // Include the current unit price and total price
            currentUnitPrice: parseFloat(input.closest('tr').querySelector('.price').textContent.trim().replace('Rs.', '')),
            currentTotalPrice: parseFloat(document.querySelector('.text-right.text-dark.b strong').textContent.trim().replace('Rs.', ''))
          })
        })
          .then(response => response.json())
          .then(data => {
            if (data.success) {
              const row = input.closest('tr');
              const priceElement = row.querySelector('.price');

              const newTotalPrice = data.newTotalPrice;
              priceElement.textContent = 'Rs.' + newTotalPrice.toFixed(2);

              // Update the total price in the cart summary
              const totalElement = document.querySelector('.text-right.text-dark.b strong');
              totalElement.textContent = 'Rs.' + data.updatedTotal.toFixed(2);

              console.log('Quantity and price updated successfully');
            } else {
              console.error('Failed to update quantity:', data.message);
            }
          })
          .catch(error => {
            console.error('Error:', error);
          });
      }


    });
  </script>

  <%- include('../userLayouts/userFoot.ejs') %>