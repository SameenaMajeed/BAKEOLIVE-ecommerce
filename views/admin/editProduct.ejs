<%- include('../adminLayouts/homehead.ejs') %>


  <style>
    .image-preview-container {
      position: relative;
      margin: 5px;
    }

    .close-icon {
      position: absolute;
      top: 0;
      left: 0;
      cursor: pointer;
      color: red;
    }
  </style>

  <div class="text-center mt-3">
    <a href="/admin/viewProduct" class="btn btn-outline-dark">Go Back to View Page</a>
  </div>

  <div class="container-fluid">
    <form id="addProductForm" class="mx-auto mt-5 p-4 bg-light" style="max-width: 600px;" action="/admin/editProduct"
      method="post" enctype="multipart/form-data" onsubmit="return validateForm()">
      <h1 class="text-center">UPDATE PRODUCT</h1>

      <div class="mb-3 mt-5">
        <label class="form-label">Name</label>
        <input type="text" class="form-control" name="name" id="name" value="<%= product.name %>">
        <small id="nameError" class="text-danger"></small>
      </div>

      <div class="mb-3">
        <label class="form-label">Quantity</label>
        <input type="text" class="form-control" name="quantity" id="quantity" value="<%= product.quantity %>">
        <small id="quantityError" class="text-danger"></small>
      </div>

      <div class="mb-3">
        <label class="form-label">Price</label>
        <input type="text" class="form-control" name="price" id="price" value="<%= product.price %>">
        <small id="priceError" class="text-danger"></small>
      </div>

      <div class="mb-3">
        <label class="form-label">Description</label>
        <input type="text" class="form-control" name="description" id="description" value="<%= product.description %>">
        <small id="descriptionError" class="text-danger"></small>
      </div>

      <div class="mb-3">
        <label class="form-label" for="product_category">PRODUCT CATEGORY</label>
        <div class="form-label">
          <% if (category.length> 0) { %>
            <select id="product_category" class="form-control" name="category_id">
              <% if (product.category_id?.categoryName) { %>
                <option value="<%= product.category_id._id %>">
                  <%= product.category_id.categoryName %>
                </option>
                <% } %>
                  <% category.forEach(function(cat) { %>
                    <option value="<%= cat._id %>" <% if (product.category_id===cat._id) { %>
                      selected
                      <% } %>>
                        <%= cat.categoryName %>
                    </option>
                    <% }); %>
            </select>
            <% } else { %>
              <p>No categories available</p>
              <% } %>

                <small id="categoryError" class="text-danger"></small>
        </div>
      </div>


      <div class="mb-3">
        <label class="form-label">Image</label>
        <input type="file" name="image" class="form-control pre" id="image" multiple onchange="previewImages()">
        <small id="imageError" class="text-danger"></small>
        <div id="image-preview-container" class="mt-2 d-flex flex-wrap">
          <!-- Display existing images on edit -->
          <% if (product && product.image && product.image.length > 0) { %>
            <% product.image.forEach(function (img, index) { %>
              <div class="image-preview-container">
                <img src="/public/productImage/<%= img %>" style="max-width: 100px; height: auto;">
                <a class="text-danger delete-icon" href="/admin/deleteImage?pro=<%= product._id %>&image=<%= index %>"
                  onclick="hideIcon(this)"><i class="fa-solid fa-xmark"></i></a>
              </div>
            <% }); %>
          <% } %>
        </div>
      </div>
      


      <input type="hidden" name="id" value="<%= product._id %>">

      <div class="text-center">
        <input type="submit" value="UPDATE" class="btn btn-outline-success">
      </div>

      <br><br>
      <% if (typeof message !=='undefined' ) { %>
        <p style="color:rgb(128, 23, 0);font-weight: bold;">
          <%= message %>
        </p>
        <% } %>
    </form>
  </div>


    <script>

function hideIcon(element) {
        // Ask for confirmation before proceeding
        var isConfirmed = confirm("Are you sure you want to delete?");

        // If the user confirms, hide the icon
        if (isConfirmed) {
            // Find the delete icon and hide it
            var icon = element.querySelector('i');
            if (icon) {
                icon.style.display = 'none';
            }

            // Perform the deletion operation or additional actions here
        } else {
            // If the user cancels, prevent the default behavior
            event.preventDefault();
        }
    }


      // document.getElementById('image-preview-container').addEventListener('click', function (event) {
      //   if (event.target.classList.contains('close-icon')) {
      //     var filename = event.target.getAttribute('data-filename');
      //     var productId = '';
      //     var imgIndex = event.target.getAttribute('data-imgIndex');
      //     console.log('filename:', filename);
      //     console.log('productId:', productId);
      //     console.log('imgIndex:', imgIndex);
      //     removeImage(productId, imgIndex, filename);
      //   }
      // });

      // function removeImage(productId, imgIndex, filename) {
      //   var previewContainer = document.getElementById('image-preview-container');
      //   var image = previewContainer.querySelector(`img[src$="${filename}"]`);
      //   console.log('image:', image)

      //   if (image) {
      //     console.log('hel000000000')
      //     var imageToRemove = image.parentNode;

      //     fetch(`/admin/deleteImage?pro=${productId}&image=${imgIndex}`, {
      //       method: 'DELETE',
      //       headers: {
      //         'Content-Type': 'application/json',
      //       },
      //       body: JSON.stringify({ filename: filename }),
      //     })

      //       .then(response => response.json())
      //       .then(data => {
      //         if (data.success) {
      //           // If the server successfully deletes the image, remove it from the client side
      //           previewContainer.removeChild(imageToRemove);
      //         } else {
      //           console.error('Failed to delete image on the server');
      //         }
      //       })
      //       .catch(error => {
      //         console.error('Error during image deletion:', error);
      //       });
      //   } else {
      //     console.error('Image not found in the preview container');
      //   }
      // }


      let selectedImages = [];

    function previewImages() {
        const input = document.querySelector('.pre');
        const preview = document.getElementById('imagePreviewContainer');
        const files = input.files;



        // Function to create a promise for each file
        const readAndPreview = (file) => {
            return new Promise((resolve, reject) => {
                const imageContainer = document.createElement('div');
                imageContainer.style.display = 'inline-block';
                imageContainer.style.marginRight = '10px';

                const img = document.createElement('img');
                img.style.maxWidth = '300px';
                img.style.maxHeight = '300px';

                const reader = new FileReader();
                reader.onload = function (e) {
                    img.src = e.target.result;
                    resolve(imageContainer);
                };
                reader.readAsDataURL(file);
                imageContainer.appendChild(img);
                preview.appendChild(imageContainer);

                selectedImages.push(file);
            });
        };
        preview.innerHTML = '';
        // Asynchronously process each file and create promises
        const promises = Array.from(files).map(readAndPreview);

        // Wait for all promises to be resolved
        Promise.all(promises)
            .then(() => {
                console.log('All images loaded successfully');
            })
            .catch((error) => {
                console.error('Error loading images:', error);
            });
    }


      function validateForm() {
        var name = document.getElementById("name").value;
        var quantity = document.getElementById("quantity").value;
        var price = document.getElementById("price").value;
        var description = document.getElementById("description").value;
        var imageInput = document.getElementById("image");

        // Reset previous error messages
        document.getElementById("nameError").textContent = "";
        document.getElementById("quantityError").textContent = "";
        document.getElementById("priceError").textContent = "";
        document.getElementById("descriptionError").textContent = "";
        document.getElementById("categoryError").textContent = "";
        document.getElementById("imageError").textContent = "";

        // Simple validation
        if (name.trim() === "") {
          document.getElementById("nameError").textContent = "Name is required";
        }

        if (quantity.trim() === "") {
          document.getElementById("quantityError").textContent = "Quantity is required";
        }

        if (price.trim() === "") {
          document.getElementById("priceError").textContent = "Price is required";
        }

        if (description.trim() === "") {
          document.getElementById("descriptionError").textContent = "Description is required";
        }

        // Note: Ensure that product is defined before accessing its properties
        if (!product || !product.category_id) {
          document.getElementById("categoryError").textContent = "Category is required";
        }

        if (imageInput.files.length === 0) {
          document.getElementById("imageError").textContent = "Please select an image";
        }

        return (
          !document.getElementById("nameError").textContent &&
          !document.getElementById("quantityError").textContent &&
          !document.getElementById("priceError").textContent &&
          !document.getElementById("descriptionError").textContent &&
          !document.getElementById("categoryError").textContent &&
          !document.getElementById("imageError").textContent
        );
      }

    </script>

<%- include('../adminLayouts/homefooter.ejs') %>

